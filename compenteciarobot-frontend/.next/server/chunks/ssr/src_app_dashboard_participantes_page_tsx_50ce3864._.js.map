{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/pasanriasAGETIC/compenteciarobot-frontend/src/app/dashboard/participantes/page.tsx"],"sourcesContent":["'use client';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  Box, Button, TextField, Typography, Stack, CircularProgress,\r\n} from '@mui/material';\r\nimport { getParticipantes } from '@/services/participantes/participantesService';\r\nimport ParticipantesTable from '@/components/participantes/ParticipantesTable';\r\nimport ParticipanteForm from '@/components/participantes/ParticipanteForm';\r\nimport { Participante } from '@/types/Participante';\r\n\r\nexport default function Participantes() {\r\n  return <h1>Hola Participantes</h1>;\r\n}\r\n\r\n\r\n/*export default function ParticipantesPage() {\r\n  const [participantes, setParticipantes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filtro, setFiltro] = useState({ nombre: '', departamento: '', municipio: '' });\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n//  const [editData, setEditData] = useState(null);\r\n\r\nconst [editData, setEditData] = useState<Participante | null>(null);\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await getParticipantes(filtro);\r\n      setParticipantes(res.data);\r\n    } catch (e) {\r\n      console.error('Error al obtener participantes');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [filtro]);\r\n\r\n  return (\r\n    <Box p={3}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Participantes\r\n      </Typography>\r\n\r\n      <Stack direction=\"row\" spacing={2} mb={2}>\r\n        <TextField label=\"Nombre\" onChange={(e) => setFiltro({ ...filtro, nombre: e.target.value })} />\r\n        <TextField label=\"Departamento\" onChange={(e) => setFiltro({ ...filtro, departamento: e.target.value })} />\r\n        <TextField label=\"Municipio\" onChange={(e) => setFiltro({ ...filtro, municipio: e.target.value })} />\r\n        <Button variant=\"contained\" onClick={fetchData}>Buscar</Button>\r\n        <Button variant=\"outlined\" onClick={() => {\r\n          setEditData(null);\r\n          setModalOpen(true);\r\n        }}>\r\n          Agregar Participante\r\n        </Button>\r\n      </Stack>\r\n\r\n      {loading ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <ParticipantesTable\r\n          participantes={participantes}\r\n          onRefresh={fetchData}\r\n          onEdit={(data: Participante) => {\r\n            setEditData(data);\r\n            setModalOpen(true);\r\n        }}\r\n\r\n        />\r\n      )}\r\n\r\n      <ParticipanteForm\r\n        open={modalOpen}\r\n        onClose={() => setModalOpen(false)}\r\n        onSuccess={fetchData}\r\n        initialData={editData}\r\n      />\r\n    </Box>\r\n  );\r\n}*/\r\n"],"names":[],"mappings":";;;;AAAA;;AAUe,SAAS;IACtB,qBAAO,8OAAC;kBAAG;;;;;;AACb,EAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAkEC","debugId":null}}]
}